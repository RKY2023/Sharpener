{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\SharpenerWork\\\\reactJS\\\\login\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useReducer, useContext, useRef } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../store/auth-context\";\nimport Input from \"../UI/Input/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      inValid: action.val.includes(\"@\")\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n  return {\n    value: \"\",\n    inValid: false\n  };\n};\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      inValid: action.val.trim().length > 6\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n  return {\n    value: \"\",\n    inValid: false\n  };\n};\nconst Login = props => {\n  _s();\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [enteredCollegeName, setEnteredCollegeName] = useState(\"\");\n  const [collegeNameIsValid, setCollegeNameIsValid] = useState(\"\");\n  const [formIsValid, setFormIsValid] = useState(false);\n  // collegeName\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const authCtx = useContext(AuthContext);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n    return () => {\n      console.log(\"EFFECT CLEANUP\");\n    };\n  }, [emailState.value]);\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    const timeout1 = setTimeout(() => {\n      console.log(\"Checking form validity\");\n      setFormIsValid(emailIsValid && passwordIsValid && enteredCollegeName.trim().length > 0);\n    }, 500);\n    // Cleanup function\n    // return () => {};\n    return () => {\n      console.log(\"CLEANUP\");\n      clearTimeout(timeout1);\n    };\n    // return clearTimeout();\n  }, [emailIsValid, passwordIsValid, enteredCollegeName]);\n  const emailChangeHandler = event => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n  };\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n  };\n  const collegeNameChangeHandler = event => {\n    setEnteredCollegeName(event.target.value);\n    setFormIsValid(event.target.value.trim().length > 0 && emailState.isValid && passwordState.isValid);\n  };\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  };\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"INPUT_BLUR\"\n    });\n  };\n  const validateCollegeNameHandler = () => {\n    setCollegeNameIsValid(enteredCollegeName.trim().length > 0);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value, enteredCollegeName);\n    } else if (!emailIsValid) {\n      emailInputRef.current.activate();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: emailInputRef,\n        id: \"email\",\n        label: \"E-Mail\",\n        type: \"email\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: passwordInputRef,\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        isValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${collegeNameIsValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"collegeName\",\n          children: \"College Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"collegeName\",\n          value: enteredCollegeName,\n          onChange: collegeNameChangeHandler,\n          onBlur: validateCollegeNameHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"5s1eppcUVevIxlyFRjITnSnqCvA=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","useReducer","useContext","useRef","Card","classes","Button","AuthContext","Input","jsxDEV","_jsxDEV","emailReducer","state","action","type","value","val","inValid","includes","isValid","passwordReducer","trim","length","Login","props","_s","enteredCollegeName","setEnteredCollegeName","collegeNameIsValid","setCollegeNameIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","authCtx","emailInputRef","passwordInputRef","console","log","emailIsValid","passwordIsValid","timeout1","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","collegeNameChangeHandler","validateEmailHandler","validatePasswordHandler","validateCollegeNameHandler","submitHandler","preventDefault","onLogin","current","activate","className","login","children","onSubmit","ref","id","label","onChange","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","control","invalid","htmlFor","actions","btn","_c","$RefreshReg$"],"sources":["D:/Work/SharpenerWork/reactJS/login/src/components/Login/Login.js"],"sourcesContent":["import React, { useEffect, useState, useReducer, useContext, useRef } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../store/auth-context\";\nimport Input from \"../UI/Input/Input\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, inValid: action.val.includes(\"@\") };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.includes(\"@\") };\n  }\n  return { value: \"\", inValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, inValid: action.val.trim().length > 6 };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n  return { value: \"\", inValid: false };\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [enteredCollegeName, setEnteredCollegeName] = useState(\"\");\n  const [collegeNameIsValid, setCollegeNameIsValid] = useState(\"\");\n  const [formIsValid, setFormIsValid] = useState(false);\n  // collegeName\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  const authCtx = useContext(AuthContext);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n    return () => {\n      console.log(\"EFFECT CLEANUP\");\n    };\n  }, [emailState.value]);\n\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n  useEffect(() => {\n    const timeout1 = setTimeout(() => {\n      console.log(\"Checking form validity\");\n      setFormIsValid(\n        emailIsValid && passwordIsValid && enteredCollegeName.trim().length > 0\n      );\n    }, 500);\n    // Cleanup function\n    // return () => {};\n    return () => {\n      console.log(\"CLEANUP\");\n      clearTimeout(timeout1);\n    };\n    // return clearTimeout();\n  }, [emailIsValid, passwordIsValid, enteredCollegeName]);\n\n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\n  };\n\n  const collegeNameChangeHandler = (event) => {\n    setEnteredCollegeName(event.target.value);\n\n    setFormIsValid(\n      event.target.value.trim().length > 0 &&\n        emailState.isValid &&\n        passwordState.isValid\n    );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type: \"INPUT_BLUR\" });\n  };\n\n  const validateCollegeNameHandler = () => {\n    setCollegeNameIsValid(enteredCollegeName.trim().length > 0);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if(formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value, enteredCollegeName);\n    } else if ( !emailIsValid){\n      emailInputRef.current.activate();\n    }\n    \n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input\n          ref={emailInputRef}\n          id=\"email\"\n          label=\"E-Mail\"\n          type=\"email\"\n          isValid={emailIsValid}\n          value={emailState.value}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n        />\n        <Input\n          ref={passwordInputRef}\n          id=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          isValid={passwordIsValid}\n          value={passwordState.value}\n          onChange={passwordChangeHandler}\n          onBlur={validatePasswordHandler}\n        />\n        <div\n          className={`${classes.control} ${\n            collegeNameIsValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"collegeName\">College Name</label>\n          <input\n            type=\"text\"\n            id=\"collegeName\"\n            value={enteredCollegeName}\n            onChange={collegeNameChangeHandler}\n            onBlur={validateCollegeNameHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}